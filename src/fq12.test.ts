import { assert } from 'o1js/dist/node/lib/errors';
import Fq from './fq';
import Fq2 from './fq2'
import Fq6 from './fq6';
import Fq12 from './fq12';
import { ForeignField, Field3} from 'o1js/dist/node/lib/gadgets/foreign-field';

/// An element of Fq12, represented by c0 + c1 * w; where u^2 = -1.
describe('test Fq12 bn254', function() {
  //Fq12 First Random Parameters
  //c0: c0: c0:
  //20565778613497772725313186038903693868130952016686547887295757654260996790541
  //c0: c0: c1:
  //16564796803417964170148317130821109481676808410290682470499918507955909042579
  //c0: c1: c0:
  //15564574208941118648210264609995769114053576064802340651369888931210472790102
  //c0: c1: c1:
  //16333544895433003939103395070049526754338105821747982276832575684706238266303
  //c0: c2: c0:
  //4858875103656184311966127078026290328343822087151284278932256025594315604381
  //c0: c2: c1:
  //16479470925544232599518397886607432134134423945903491314772046282328588460318
  //c1: c0: c0:
  //9861749469456790419263505398497782832470482351279215109396266689807085087792
  //c1: c0: c1:
  //9599468815392442452265992615991972285476963503819512368389322507711377574298
  //c1: c1: c0:
  //11103351514121741428672022257377204632894663783980622146901003399355946998719
  //c1: c1: c1:
  //13850079382040043654557621423539026922286792236035585953074382993720470122468
  //c1: c2: c0:
  //10277896384839546392835517159129230451945277828559876034839449140415179507972
  //c1: c2: c1:
  //1919763156133493486522189971767307441680230560584354565479714901004312072980
  // 
  //Fq12 Second Random Parameters
  //c0: c0: c0:
  //21227010742668523973779795892080484478413631586992185774992397774453111499562
  //c0: c0: c1:
  //19226519837628619696197361438039192285186559783794253066594478201300567625581
  //c0: c1: c0:
  //7782287104470559324105132304997884557026788032401170325684944465605236395051
  //c0: c1: c1:
  //19110893883636139580674900407653400921517208489522902969760806789675732237443
  //c0: c2: c0:
  //13373558987747729767106266411641782708520066622224553970810646960119770906482
  //c0: c2: c1:
  //8239735462772116299759198943303716067067211972951745657386023141164294230159
  //c1: c0: c0:
  //19723498938913580838527010796995565664940964702558430218792533379614170175584
  //c1: c0: c1:
  //19198937630784884904531985231983944570953927007639024736778645015422755148596
  //c1: c1: c0:
  //318460156404207635097638769497134177093016410663420631112968904066667788855
  //c1: c1: c1:
  //5811915892240812086868837101820778755877273314773348243459728092795714036353
  //c1: c2: c0:
  //20555792769679092785671034318258460903890555657119752069678898280830359015944
  //c1: c2: c1:
  //3839526312266986973044379943534614883360461121168709130959429802008624145960
  // 
  //Fq12 Mul Result Parameters
  //c0: c0: c0:
  //12083832053377805552295264727351891057332419209010751803121259188056040920617
  //c0: c0: c1:
  //16376739010078156922441867845948194347225408739658150985965088425627708187509
  //c0: c1: c0:
  //910805037561625412084058257216085845392138748809403239325615182950607970647
  //c0: c1: c1:
  //8143336879249243704766131244020941317744905496604819845244809980180428322687
  //c0: c2: c0:
  //17574879704160087762230915242405987290973599668083696758254689152531810446410
  //c0: c2: c1:
  //1143437932619437852082883888969516645048101932386256042670010861916219255078
  //c1: c0: c0:
  //20470696440727707297002798106980239649350363475997455574669203428638400202815
  //c1: c0: c1:
  //12073483588656861247704180060269893083828296779706425979934346547539453840403
  //c1: c1: c0:
  //1968548403323838288987805419020387860246125017736087727257807275744383756568
  //c1: c1: c1:
  //11549029172311686997965737583046241289152688046097700120686025588606155549435
  //c1: c2: c0:
  //9614548276972959396049454575930898111963332839590016988099627415648955413939
  //c1: c2: c1:
  //1095605565452727139591525363956543503628814967553902471569378228816657388453


  it('Mul Fq12 comparison test', function() {
    let first = new Fq12(
        new Fq6(
            new Fq2(
                new Fq(20565778613497772725313186038903693868130952016686547887295757654260996790541n),
                new Fq(16564796803417964170148317130821109481676808410290682470499918507955909042579n)
            ),
            new Fq2(
                new Fq(15564574208941118648210264609995769114053576064802340651369888931210472790102n),
                new Fq(16333544895433003939103395070049526754338105821747982276832575684706238266303n)
            ),
            new Fq2(
                new Fq(4858875103656184311966127078026290328343822087151284278932256025594315604381n),
                new Fq(16479470925544232599518397886607432134134423945903491314772046282328588460318n),
            )
        ),

        new Fq6(
            new Fq2(
                new Fq(9861749469456790419263505398497782832470482351279215109396266689807085087792n),
                new Fq(9599468815392442452265992615991972285476963503819512368389322507711377574298n)
            ),
            new Fq2(
                new Fq(11103351514121741428672022257377204632894663783980622146901003399355946998719n),
                new Fq(13850079382040043654557621423539026922286792236035585953074382993720470122468n)
            ),
            new Fq2(
                new Fq(10277896384839546392835517159129230451945277828559876034839449140415179507972n),
                new Fq(1919763156133493486522189971767307441680230560584354565479714901004312072980n),
            )
        ),
    );

    let second = new Fq12(
        new Fq6(
            new Fq2(
                new Fq(21227010742668523973779795892080484478413631586992185774992397774453111499562n),
                new Fq(19226519837628619696197361438039192285186559783794253066594478201300567625581n)
            ),
            new Fq2(
                new Fq(7782287104470559324105132304997884557026788032401170325684944465605236395051n),
                new Fq(19110893883636139580674900407653400921517208489522902969760806789675732237443n)
            ),
            new Fq2(
                new Fq(13373558987747729767106266411641782708520066622224553970810646960119770906482n),
                new Fq(8239735462772116299759198943303716067067211972951745657386023141164294230159n),
            )
        ),

        new Fq6(
            new Fq2(
                new Fq(19723498938913580838527010796995565664940964702558430218792533379614170175584n),
                new Fq(19198937630784884904531985231983944570953927007639024736778645015422755148596n)
            ),
            new Fq2(
                new Fq(318460156404207635097638769497134177093016410663420631112968904066667788855n),
                new Fq(5811915892240812086868837101820778755877273314773348243459728092795714036353n)
            ),
            new Fq2(
                new Fq(20555792769679092785671034318258460903890555657119752069678898280830359015944n),
                new Fq(3839526312266986973044379943534614883360461121168709130959429802008624145960n),
            )
        ),
    );

    let res = second.mul(first);

    console.log("The multiplication result is:");
    console.log(res.c0.c0.c0.toBigInt());
    console.log(res.c0.c0.c1.toBigInt());
    console.log(res.c0.c1.c0.toBigInt());
    console.log(res.c0.c1.c1.toBigInt());
    console.log(res.c0.c2.c0.toBigInt());
    console.log(res.c0.c2.c1.toBigInt());
    console.log(res.c1.c0.c0.toBigInt());
    console.log(res.c1.c0.c1.toBigInt());
    console.log(res.c1.c1.c0.toBigInt());
    console.log(res.c1.c1.c1.toBigInt());
    console.log(res.c1.c2.c0.toBigInt());
    console.log(res.c1.c2.c1.toBigInt());
    
  });

  //Fq12 Square Result Parameters
  //c0: c0: c0:
  //18633802000257489304173628145881151202350299817713832433789845325984436244073
  //c0: c0: c1:
  //6551274708822004469758823065656260660602375460592604502683900915431028700695
  //c0: c1: c0:
  //15433081553534922234431096867156142971104832958875934443794139006379050718490
  //c0: c1: c1:
  //9552284520823895492047748325747670789126921585841409880844271456796089447787
  //c0: c2: c0:
  //16574399109949478899897870053568275064195540020459576728028004632371061976651
  //c0: c2: c1:
  //20209266050590614711719656177804692958998499445058546882363490801667634494538
  //c1: c0: c0:
  //16376557152582165837602238485584191719480290780797964459735362742910720162252
  //c1: c0: c1:
  //14036435445293344042612625197267369484801899655224705516485284816960608314039
  //c1: c1: c0:
  //5952487297026925675639525484267765305936162245648434914344053399524552246971
  //c1: c1: c1:
  //9239223337849349598372590066436993031322150436878160096548820470884924439548
  //c1: c2: c0:
  //20824584344681932650187407107899083542788452966050707788093124669306300056301
  //c1: c2: c1:
  //5254133026730036756122501440216689820642314205502686709793310161982371152479

  it('Square Fq12 Comparison test', function() {
    let second = new Fq12(
        new Fq6(
            new Fq2(
                new Fq(21227010742668523973779795892080484478413631586992185774992397774453111499562n),
                new Fq(19226519837628619696197361438039192285186559783794253066594478201300567625581n)
            ),
            new Fq2(
                new Fq(7782287104470559324105132304997884557026788032401170325684944465605236395051n),
                new Fq(19110893883636139580674900407653400921517208489522902969760806789675732237443n)
            ),
            new Fq2(
                new Fq(13373558987747729767106266411641782708520066622224553970810646960119770906482n),
                new Fq(8239735462772116299759198943303716067067211972951745657386023141164294230159n),
            )
        ),

        new Fq6(
            new Fq2(
                new Fq(19723498938913580838527010796995565664940964702558430218792533379614170175584n),
                new Fq(19198937630784884904531985231983944570953927007639024736778645015422755148596n)
            ),
            new Fq2(
                new Fq(318460156404207635097638769497134177093016410663420631112968904066667788855n),
                new Fq(5811915892240812086868837101820778755877273314773348243459728092795714036353n)
            ),
            new Fq2(
                new Fq(20555792769679092785671034318258460903890555657119752069678898280830359015944n),
                new Fq(3839526312266986973044379943534614883360461121168709130959429802008624145960n),
            )
        ),
    );

    let res = second.square();

    console.log("The square result is:");
    console.log(res.c0.c0.c0.toBigInt());
    console.log(res.c0.c0.c1.toBigInt());
    console.log(res.c0.c1.c0.toBigInt());
    console.log(res.c0.c1.c1.toBigInt());
    console.log(res.c0.c2.c0.toBigInt());
    console.log(res.c0.c2.c1.toBigInt());
    console.log(res.c1.c0.c0.toBigInt());
    console.log(res.c1.c0.c1.toBigInt());
    console.log(res.c1.c1.c0.toBigInt());
    console.log(res.c1.c1.c1.toBigInt());
    console.log(res.c1.c2.c0.toBigInt());
    console.log(res.c1.c2.c1.toBigInt());
    
  });

  //Fq12 mul_by_014 Result Parameters
  //c0: c0: c0:
  //15402507360567011132870494018722436470546840939038248801949272602379705177159
  //c0: c0: c1:
  //6582292680092363377783606662306317160723255662265505281787887219104121985322
  //c0: c1: c0:
  //13790693828449495059837266611310660807563625675112496027150305101964785369785
  //c0: c1: c1:
  //1856954861602382349806856062206307945453027975293838644628639380408886949201
  //c0: c2: c0:
  //21800870698228611375728085705330333102863228719836805022287567695233996792825
  //c0: c2: c1:
  //1042127979170111059497883410472400141603532372759910836906458879601689435960
  //c1: c0: c0:
  //16694596473336442055531535476302043290789566467162042479656898672927597220888
  //c1: c0: c1:
  //21071122396263243201635496553955159909506770296308874208092712295222080864270
  //c1: c1: c0:
  //6745101218566221583650849867405878733766049951801774140365857894728545491446
  //c1: c1: c1:
  //4694805148822359005311589102125048588332162492416801777304111642214539190864
  //c1: c2: c0:
  //17245909456705133508680043005424225175552308249980159827155676031813993550789
  //c1: c2: c1:
  //3571257017872860002080668893093223741332412536427135105973315551165317693349

  it('Mul_By_014 comparison test', function() {
    let first = new Fq12(
        new Fq6(
            new Fq2(
                new Fq(20565778613497772725313186038903693868130952016686547887295757654260996790541n),
                new Fq(16564796803417964170148317130821109481676808410290682470499918507955909042579n)
            ),
            new Fq2(
                new Fq(15564574208941118648210264609995769114053576064802340651369888931210472790102n),
                new Fq(16333544895433003939103395070049526754338105821747982276832575684706238266303n)
            ),
            new Fq2(
                new Fq(4858875103656184311966127078026290328343822087151284278932256025594315604381n),
                new Fq(16479470925544232599518397886607432134134423945903491314772046282328588460318n),
            )
        ),

        new Fq6(
            new Fq2(
                new Fq(9861749469456790419263505398497782832470482351279215109396266689807085087792n),
                new Fq(9599468815392442452265992615991972285476963503819512368389322507711377574298n)
            ),
            new Fq2(
                new Fq(11103351514121741428672022257377204632894663783980622146901003399355946998719n),
                new Fq(13850079382040043654557621423539026922286792236035585953074382993720470122468n)
            ),
            new Fq2(
                new Fq(10277896384839546392835517159129230451945277828559876034839449140415179507972n),
                new Fq(1919763156133493486522189971767307441680230560584354565479714901004312072980n),
            )
        ),
    );

    let second = new Fq12(
        new Fq6(
            new Fq2(
                new Fq(21227010742668523973779795892080484478413631586992185774992397774453111499562n),
                new Fq(19226519837628619696197361438039192285186559783794253066594478201300567625581n)
            ),
            new Fq2(
                new Fq(7782287104470559324105132304997884557026788032401170325684944465605236395051n),
                new Fq(19110893883636139580674900407653400921517208489522902969760806789675732237443n)
            ),
            new Fq2(
                new Fq(13373558987747729767106266411641782708520066622224553970810646960119770906482n),
                new Fq(8239735462772116299759198943303716067067211972951745657386023141164294230159n),
            )
        ),

        new Fq6(
            new Fq2(
                new Fq(19723498938913580838527010796995565664940964702558430218792533379614170175584n),
                new Fq(19198937630784884904531985231983944570953927007639024736778645015422755148596n)
            ),
            new Fq2(
                new Fq(318460156404207635097638769497134177093016410663420631112968904066667788855n),
                new Fq(5811915892240812086868837101820778755877273314773348243459728092795714036353n)
            ),
            new Fq2(
                new Fq(20555792769679092785671034318258460903890555657119752069678898280830359015944n),
                new Fq(3839526312266986973044379943534614883360461121168709130959429802008624145960n),
            )
        ),
    );

    let res = second.mul_by_014(first.c0.c0, first.c0.c1, first.c0.c2);

    console.log("The multiplication result is:");
    console.log(res.c0.c0.c0.toBigInt());
    console.log(res.c0.c0.c1.toBigInt());
    console.log(res.c0.c1.c0.toBigInt());
    console.log(res.c0.c1.c1.toBigInt());
    console.log(res.c0.c2.c0.toBigInt());
    console.log(res.c0.c2.c1.toBigInt());
    console.log(res.c1.c0.c0.toBigInt());
    console.log(res.c1.c0.c1.toBigInt());
    console.log(res.c1.c1.c0.toBigInt());
    console.log(res.c1.c1.c1.toBigInt());
    console.log(res.c1.c2.c0.toBigInt());
    console.log(res.c1.c2.c1.toBigInt());
    
  });

  //Fq12 mul_by_034 Result Parameters
  //c0: c0: c0:
  //56092503002851229912863624636520508986933095515827290662137011792211655621
  //c0: c0: c1:
  //18398805478669453696091597775169459122906404629489544721551596201469071853970
  //c0: c1: c0:
  //20016932407356379343031366945026047624741454738086261763325958163864707667968
  //c0: c1: c1:
  //16597622928332626415554138290543142108262020735877521718992820033313072051226
  //c0: c2: c0:
  //21786403726630993022673695817605681518265093144588116026106899507778389652221
  //c0: c2: c1:
  //4111561811163851803199068679146375518766475949688549812016537560978562050385
  //c1: c0: c0:
  //4067995511775935345016622228212893472483672418755285542810493527517588571315
  //c1: c0: c1:
  //3340016383116628283749286730858853172971202432650976168966767235550770345792
  //c1: c1: c0:
  //7617994829671483484453839635596746019564074436463151500665854740475982077203
  //c1: c1: c1:
  //399121048307169294555862704722851927486775805787102909119314615294185566496
  //c1: c2: c0:
  //6701000108541480760112383297743069054432307352458984438563053864547794596566
  //c1: c2: c1:
  //3546813423025828319352973473261819008769158641740230288896041229512142608506

  it('Mul_By_034 comparison test', function() {
    let first = new Fq12(
        new Fq6(
            new Fq2(
                new Fq(20565778613497772725313186038903693868130952016686547887295757654260996790541n),
                new Fq(16564796803417964170148317130821109481676808410290682470499918507955909042579n)
            ),
            new Fq2(
                new Fq(15564574208941118648210264609995769114053576064802340651369888931210472790102n),
                new Fq(16333544895433003939103395070049526754338105821747982276832575684706238266303n)
            ),
            new Fq2(
                new Fq(4858875103656184311966127078026290328343822087151284278932256025594315604381n),
                new Fq(16479470925544232599518397886607432134134423945903491314772046282328588460318n),
            )
        ),

        new Fq6(
            new Fq2(
                new Fq(9861749469456790419263505398497782832470482351279215109396266689807085087792n),
                new Fq(9599468815392442452265992615991972285476963503819512368389322507711377574298n)
            ),
            new Fq2(
                new Fq(11103351514121741428672022257377204632894663783980622146901003399355946998719n),
                new Fq(13850079382040043654557621423539026922286792236035585953074382993720470122468n)
            ),
            new Fq2(
                new Fq(10277896384839546392835517159129230451945277828559876034839449140415179507972n),
                new Fq(1919763156133493486522189971767307441680230560584354565479714901004312072980n),
            )
        ),
    );

    let second = new Fq12(
        new Fq6(
            new Fq2(
                new Fq(21227010742668523973779795892080484478413631586992185774992397774453111499562n),
                new Fq(19226519837628619696197361438039192285186559783794253066594478201300567625581n)
            ),
            new Fq2(
                new Fq(7782287104470559324105132304997884557026788032401170325684944465605236395051n),
                new Fq(19110893883636139580674900407653400921517208489522902969760806789675732237443n)
            ),
            new Fq2(
                new Fq(13373558987747729767106266411641782708520066622224553970810646960119770906482n),
                new Fq(8239735462772116299759198943303716067067211972951745657386023141164294230159n),
            )
        ),

        new Fq6(
            new Fq2(
                new Fq(19723498938913580838527010796995565664940964702558430218792533379614170175584n),
                new Fq(19198937630784884904531985231983944570953927007639024736778645015422755148596n)
            ),
            new Fq2(
                new Fq(318460156404207635097638769497134177093016410663420631112968904066667788855n),
                new Fq(5811915892240812086868837101820778755877273314773348243459728092795714036353n)
            ),
            new Fq2(
                new Fq(20555792769679092785671034318258460903890555657119752069678898280830359015944n),
                new Fq(3839526312266986973044379943534614883360461121168709130959429802008624145960n),
            )
        ),
    );

    let res = second.mul_by_034(first.c0.c0, first.c0.c1, first.c0.c2);

    console.log("The multiplication result is:");
    console.log(res.c0.c0.c0.toBigInt());
    console.log(res.c0.c0.c1.toBigInt());
    console.log(res.c0.c1.c0.toBigInt());
    console.log(res.c0.c1.c1.toBigInt());
    console.log(res.c0.c2.c0.toBigInt());
    console.log(res.c0.c2.c1.toBigInt());
    console.log(res.c1.c0.c0.toBigInt());
    console.log(res.c1.c0.c1.toBigInt());
    console.log(res.c1.c1.c0.toBigInt());
    console.log(res.c1.c1.c1.toBigInt());
    console.log(res.c1.c2.c0.toBigInt());
    console.log(res.c1.c2.c1.toBigInt());
    
  });

});